{"version":3,"file":"static/js/counter-view.5b766b6c.chunk.js","mappings":"uMAaA,EAXiB,SAAC,GAAD,IAAGA,EAAH,EAAGA,KAAMC,EAAT,EAASA,YAAaC,EAAtB,EAAsBA,YAAtB,OACf,iBAAKC,UAAU,oBAAf,WACE,oBAAQC,KAAK,SAASC,QAASH,EAA/B,iFACgBF,MAEhB,oBAAQI,KAAK,SAASC,QAASJ,EAA/B,iFACgBD,SCJpB,EAFc,SAAC,GAAD,IAAGM,EAAH,EAAGA,MAAH,OAAe,0BAAOA,K,QCiBpC,IAUA,GAAeC,EAAAA,EAAAA,KAVS,SAAAC,GAAK,MAAK,CAChCF,MAAOE,EAAMC,QAAQH,MACrBN,KAAMQ,EAAMC,QAAQT,SAGK,SAAAU,GAAQ,MAAK,CACtCT,YAAa,SAAAK,GAAK,OAAII,ECvBC,SAAAJ,GAAK,MAAK,CACjCF,KAAMO,EAAAA,EACNC,QAASN,GDqBsBO,CAAkBP,KACjDJ,YAAa,SAAAI,GAAK,OAAII,ECnBC,SAAAJ,GAAK,MAAK,CACjCF,KAAMU,EAAAA,EACNF,QAASN,GDiBsBO,CAAkBP,QAGnD,EAvBA,YAA6D,IAA1CA,EAAyC,EAAzCA,MAAON,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,YAC3C,OACE,4BACE,SAAC,EAAD,CAAOI,MAAOA,KACd,SAAC,EAAD,CACEN,KAAMA,EACNC,YAAa,kBAAMA,EAAYD,IAC/BE,YAAa,kBAAMA,EAAYF,YEVxB,SAASe,IACtB,OAAO,SAAC,EAAD,M,qFCFM,SAASC,IACtB,OACE,0BACE","sources":["components/Counter/Controls.js","components/Counter/Value.js","components/Counter/Counter.js","redux/counter/counter-actions.js","views/CounterView.js","views/TodosView.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst Controls = ({ step, onIncrement, onDecrement }) => (\r\n  <div className=\"Counter__controls\">\r\n    <button type=\"button\" onClick={onDecrement}>\r\n      Уменьшить на {step}\r\n    </button>\r\n    <button type=\"button\" onClick={onIncrement}>\r\n      Увеличить на {step}\r\n    </button>\r\n  </div>\r\n);\r\n\r\nexport default Controls;\r\n","import React from 'react';\r\n\r\nconst Value = ({ value }) => <span>{value}</span>;\r\n\r\nexport default Value;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Controls from './Controls';\r\nimport Value from './Value';\r\nimport * as actions from '../../redux/counter/counter-actions';\r\n\r\nfunction Counter({ value, step, onIncrement, onDecrement }) {\r\n  return (\r\n    <div>\r\n      <Value value={value} />\r\n      <Controls\r\n        step={step}\r\n        onIncrement={() => onIncrement(step)}\r\n        onDecrement={() => onDecrement(step)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.counter.value,\r\n  step: state.counter.step,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onIncrement: value => dispatch(actions.increment(value)),\r\n  onDecrement: value => dispatch(actions.decrement(value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter); \r\n\r\n//------------------------------------------------------------------------------\r\n \r\n// функція redux без файлів Controls.js i Value.js\r\n\r\n/* import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../redux/counter/counter-actions';\r\n\r\nfunction Counter({ value, step, onDecrement, onIncrement }) {\r\n  return (\r\n    <div>\r\n      <span>{value}</span>\r\n      <button type=\"button\" onClick={() => onDecrement(step)}>\r\n        Уменьшить на {step}\r\n      </button>\r\n      <button type=\"button\" onClick={() => onIncrement(step)}>\r\n        Увеличить на {step}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.counter.value,\r\n  step: state.counter.step,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onIncrement: value => dispatch(actions.increment(value)),\r\n  onDecrement: value => dispatch(actions.decrement(value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);\r\n */\r\n\r\n//------------------------------------------------------------------------\r\n\r\n//реакт хуки\r\n\r\n/* import React, { useState, useEffect } from 'react';\r\n\r\nconst styles = {\r\n  btn: {\r\n    display: 'inline-flex',\r\n    fontSize: 20,\r\n    margin: 4,\r\n    cursor: 'pointer',\r\n  },\r\n};\r\n\r\n// Первый рендер\r\n// Каждый рендер\r\n// Каждый рендер при изменении какого-то стейта или пропса\r\n// Последний рендер\r\n\r\nexport default function Counter() {\r\n  const [counterA, setCounterA] = useState(0);\r\n\r\n  const handleCounterAIncrement = () => {\r\n    setCounterA(prevCounterA => prevCounterA + 1);\r\n  };\r\n\r\n  const [counterB, setCounterB] = useState(0);\r\n\r\n  const handleCounterBIncrement = () => {\r\n    setCounterB(prevCounterB => prevCounterB + 1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.title = `Кликнули ${counterA + counterB} раз`;\r\n  }, [counterA, counterB]);\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        style={styles.btn}\r\n        type=\"button\"\r\n        onClick={handleCounterAIncrement}\r\n      >\r\n        Кликнули counterA {counterA} раз\r\n      </button>\r\n\r\n      <button\r\n        style={styles.btn}\r\n        type=\"button\"\r\n        onClick={handleCounterBIncrement}\r\n      >\r\n        Кликнули counterB {counterB} раз\r\n      </button>\r\n\r\n    </>\r\n  );\r\n}\r\n */\r\n","import { INCREMENT, DECREMENT } from './counter-types';\r\n\r\nexport const increment = value => ({\r\n  type: INCREMENT,\r\n  payload: value,\r\n});\r\n\r\nexport const decrement = value => ({\r\n  type: DECREMENT,\r\n  payload: value,\r\n});\r\n","import React from 'react';\r\nimport Counter from '../components/Counter/Counter';\r\n\r\nexport default function CounterView() {\r\n  return <Counter />;\r\n}\r\n","import React from 'react';\r\n\r\nexport default function TodosView() {\r\n  return (\r\n    <div>\r\n      <p>Привіт</p>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["step","onIncrement","onDecrement","className","type","onClick","value","connect","state","counter","dispatch","INCREMENT","payload","actions","DECREMENT","CounterView","TodosView"],"sourceRoot":""}